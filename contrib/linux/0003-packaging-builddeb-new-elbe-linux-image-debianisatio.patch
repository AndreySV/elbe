From 79f4a7f99baebd23e69ba71e74e420adeb1f2e24 Mon Sep 17 00:00:00 2001
From: Torben Hohn <torbenh@linutronix.de>
Date: Mon, 12 Oct 2015 14:47:44 +0200
Subject: [PATCH 3/5] packaging builddeb: new elbe linux image debianisation

make deb-pkg makes use of $srctree/debian if that exists.
if it doesnt exists, it is generated.

make deb-pkg needs a few variables, that should be set now.

----------------------------------------------
ARCH
KBUILD_DEBARCH
KDEB_PKGVERSION
KERNELRELEASE
LOADADDR
KDEB_DEFCONFIG
KDEB_IMAGE
----------------------------------------------

Signed-off-by: Torben Hohn <torbenh@linutronix.de>
---
 scripts/package/builddeb | 160 ++++++++++++++++++++++++++++++++++++++++++-----
 1 file changed, 145 insertions(+), 15 deletions(-)

diff --git a/scripts/package/builddeb b/scripts/package/builddeb
index ca89cca..851482a 100755
--- a/scripts/package/builddeb
+++ b/scripts/package/builddeb
@@ -65,10 +65,57 @@ create_package() {
 
 	# Create the package
 	dpkg-gencontrol $forcearch -Vkernel:debarch="${debarch:-$(dpkg --print-architecture)}" -p$pname -P"$pdir"
-	dpkg --build "$pdir" ..
+	dpkg --build "$pdir" $srctree/..
 }
 
+# Check wether $srctree/debian directory exists
+# We use that as a template for the debian directory in $objtree
+
+if [ -d $srctree/debian ]; then
+	have_srcdebian=yes
+	mkdir -p $objtree/debian
+	cp -a $srctree/debian/changelog $objtree/debian/
+	cp -a $srctree/debian/control $objtree/debian/
+	cp -a $srctree/debian/copyright $objtree/debian/
+	cp -a $srctree/debian/source $objtree/debian/
+else
+	have_srcdebian=no
+
+	have_all=yes
+	if [ ! -n "$ARCH" ]; then
+		have_all=no
+	elif [ ! -n "$KBUILD_DEBARCH" ]; then
+		have_all=no
+	elif [ ! -n "$KDEB_PKGVERSION" ]; then
+		have_all=no
+	elif [ ! -n "$KERNELRELEASE" ]; then
+		have_all=no
+	elif [ ! -n "$LOADADDR" ]; then
+		have_all=no
+	elif [ ! -n "$KDEB_DEFCONFIG" ]; then
+		have_all=no
+	elif [ ! -n "$KDEB_IMAGE" ]; then
+		have_all=no
+	fi
+
+	if [ "$have_all" = "no" ]; then
+		echo "=================================================="
+		echo "Please set the following Variables:"
+		echo "ARCH"
+		echo "KBUILD_DEBARCH"
+		echo "KDEB_PKGVERSION"
+		echo "KERNELRELEASE"
+		echo "LOADADDR"
+		echo "KDEB_DEFCONFIG"
+		echo "KDEB_IMAGE"
+		echo "=================================================="
+
+		exit 10
+	fi
+fi
+
 # Some variables and settings used throughout the script
+
 version=$KERNELRELEASE
 revision=$(cat .version)
 if [ -n "$KDEB_PKGVERSION" ]; then
@@ -76,6 +123,7 @@ if [ -n "$KDEB_PKGVERSION" ]; then
 else
 	packageversion=$version-$revision
 fi
+
 tmpdir="$objtree/debian/tmp"
 fwdir="$objtree/debian/fwtmp"
 kernel_headers_dir="$objtree/debian/hdrtmp"
@@ -109,6 +157,7 @@ BUILD_DEBUG="$(grep -s '^CONFIG_DEBUG_INFO=y' $KCONFIG_CONFIG || true)"
 
 # Setup the directory structure
 rm -rf "$tmpdir" "$fwdir" "$kernel_headers_dir" "$libc_headers_dir" "$dbg_dir"
+rm -f $objtree/debian/files
 mkdir -m 755 -p "$tmpdir/DEBIAN"
 mkdir -p  "$tmpdir/lib" "$tmpdir/boot" "$tmpdir/usr/share/doc/$packagename"
 mkdir -m 755 -p "$fwdir/DEBIAN"
@@ -228,8 +277,20 @@ else
         echo >&2 "Install lsb-release or set \$KDEB_CHANGELOG_DIST explicitly"
 fi
 
-# Generate a simple changelog template
-cat <<EOF > debian/changelog
+if [ "$have_srcdebian" = "no" ]; then
+	mkdir -p debian/source
+	# Generate a source format template
+	cat <<EOF > debian/source/format
+3.0 (git)
+EOF
+
+	cat <<EOF > debian/source/options
+git-ref=HEAD
+git-depth=1
+EOF
+
+	# Generate a simple changelog template
+	cat <<EOF > debian/changelog
 linux-upstream ($packageversion) $distribution; urgency=low
 
   * Custom built Linux kernel.
@@ -237,8 +298,8 @@ linux-upstream ($packageversion) $distribution; urgency=low
  -- $maintainer  $(date -R)
 EOF
 
-# Generate copyright file
-cat <<EOF > debian/copyright
+	# Generate copyright file
+	cat <<EOF > debian/copyright
 This is a packacked upstream version of the Linux kernel.
 
 The sources may be found at most Linux ftp sites, including:
@@ -257,8 +318,50 @@ On Debian GNU/Linux systems, the complete text of the GNU General Public
 License version 2 can be found in \`/usr/share/common-licenses/GPL-2'.
 EOF
 
-# Generate a control file
-cat <<EOF > debian/control
+	# Generate rules file
+	cat <<EOF > debian/rules
+#!/usr/bin/make -f
+
+MAKE_OPTS= \\
+ARCH=$ARCH \\
+CROSS_COMPILE=$CROSS_COMPILE \\
+KBUILD_DEBARCH=$KBUILD_DEBARCH \\
+KDEB_PKGVERSION=$KDEB_PKGVERSION \\
+KERNELRELEASE=$KERNELRELEASE \\
+LOADADDR=$LOADADDR \\
+O=debian/build
+
+ifneq (,\$(filter parallel=%,\$(DEB_BUILD_OPTIONS)))
+       NUMJOBS = \$(patsubst parallel=%,%,\$(filter parallel=%,\$(DEB_BUILD_OPTIONS)))
+       MAKE_OPTS += -j\$(NUMJOBS)
+endif
+
+
+clean:
+	mkdir -p debian/build
+	rm -f debian/files
+	make \$(MAKE_OPTS) clean
+
+build-arch:
+	mkdir -p debian/build
+	make \$(MAKE_OPTS) $KDEB_DEFCONFIG
+	make \$(MAKE_OPTS) $KDEB_IMAGE modules
+
+build-indep: ;
+
+build: build-arch build-indep
+
+binary: binary-arch binary-indep
+
+binary-arch:
+	make \$(MAKE_OPTS) deb-pkg
+	cat debian/build/debian/files >> debian/files
+
+binary-indep: ;
+EOF
+
+	# Generate a control file
+	cat <<EOF > debian/control
 Source: linux-upstream
 Section: kernel
 Priority: optional
@@ -267,8 +370,8 @@ Standards-Version: 3.8.4
 Homepage: http://www.kernel.org/
 EOF
 
-if [ "$ARCH" = "um" ]; then
-	cat <<EOF >> debian/control
+	if [ "$ARCH" = "um" ]; then
+		cat <<EOF >> debian/control
 
 Package: $packagename
 Provides: linux-image, linux-image-2.6, linux-modules-$version
@@ -284,10 +387,12 @@ Description: User Mode Linux kernel, version $version
  files, version: $version.
 EOF
 
-else
-	cat <<EOF >> debian/control
+	else
+		cat <<EOF >> debian/control
 
 Package: $packagename
+Depends: kmod | module-init-tools, linux-base (>= 3~), debconf (>= 0.5) | debconf-2.0, initramfs-tools (>= 0.99~) | linux-initramfs-tool
+Pre-Depends: debconf | debconf-2.0
 Provides: linux-image, linux-image-2.6, linux-modules-$version
 Suggests: $fwpackagename
 Architecture: any
@@ -296,6 +401,7 @@ Description: Linux kernel, version $version
  files, version: $version.
 EOF
 
+	fi
 fi
 
 # Build kernel header package
@@ -312,7 +418,8 @@ mkdir -p "$destdir"
 ln -sf "/usr/src/linux-headers-$version" "$kernel_headers_dir/lib/modules/$version/build"
 rm -f "$objtree/debian/hdrsrcfiles" "$objtree/debian/hdrobjfiles"
 
-cat <<EOF >> debian/control
+if [ "$have_srcdebian" = "no" ]; then
+	cat <<EOF >> debian/control
 
 Package: $kernel_headers_packagename
 Provides: linux-headers, linux-headers-2.6
@@ -322,24 +429,30 @@ Description: Linux kernel headers for $KERNELRELEASE on \${kernel:debarch}
  .
  This is useful for people who need to build external modules
 EOF
+fi
 
 # Do we have firmware? Move it out of the way and build it into a package.
 if [ -e "$tmpdir/lib/firmware" ]; then
 	mv "$tmpdir/lib/firmware"/* "$fwdir/lib/firmware/$version/"
 	rmdir "$tmpdir/lib/firmware"
 
-	cat <<EOF >> debian/control
+
+	if [ "$have_srcdebian" = "no" ]; then
+		cat <<EOF >> debian/control
 
 Package: $fwpackagename
 Architecture: any
 Description: Linux kernel firmware, version $version
  This package contains firmware from the Linux kernel, version $version.
 EOF
+	fi
 
 	create_package "$fwpackagename" "$fwdir"
 fi
 
-cat <<EOF >> debian/control
+
+if [ "$have_srcdebian" = "no" ]; then
+	cat <<EOF >> debian/control
 
 Package: $libc_headers_packagename
 Section: devel
@@ -349,6 +462,7 @@ Description: Linux support headers for userspace development
  This package provides userspaces headers from the Linux kernel.  These headers
  are used by the installed headers for GNU glibc and other system libraries.
 EOF
+fi
 
 if [ "$ARCH" != "um" ]; then
 	create_package "$kernel_headers_packagename" "$kernel_headers_dir"
@@ -369,7 +483,8 @@ if [ -n "$BUILD_DEBUG" ] ; then
 	# kdump-tools
 	ln -s lib/modules/$version/vmlinux $dbg_dir/usr/lib/debug/vmlinux-$version
 
-	cat <<EOF >> debian/control
+	if [ "$have_srcdebian" = "no" ]; then
+		cat <<EOF >> debian/control
 
 Package: $dbg_packagename
 Section: debug
@@ -379,8 +494,23 @@ Description: Linux kernel debugging symbols for $version
  This package will come in handy if you need to debug the kernel. It provides
  all the necessary debug symbols for the kernel and its modules.
 EOF
+	fi
 
 	create_package "$dbg_packagename" "$dbg_dir"
 fi
 
+# only build sourcetree, if we did not generate the debian directory this run.
+
+if [ "$have_srcdebian" = "no" ]; then
+	mkdir $srctree/debian
+	cp -a debian/source $srctree/debian/
+	cp -a debian/changelog $srctree/debian/
+	cp -a debian/control $srctree/debian/
+	cp -a debian/copyright $srctree/debian/
+	cp -a debian/rules $srctree/debian/
+
+	echo "Generated debian directory this run."
+	echo "Please commit it into the git and rerun, to generate the sourcetree"
+fi
+
 exit 0
-- 
2.1.4

